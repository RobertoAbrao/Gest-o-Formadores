
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an administrator.
    function isAdmin() {
      return exists(/databases/$(database)/documents/usuarios/$(request.auth.uid))
          && get(/databases/$(database)/documents/usuarios/$(request.auth.uid)).data.perfil == 'administrador';
    }

    // Helper function to check if the user is authenticated.
    function isSignedIn() {
      return request.auth != null;
    }

    // Rules for 'usuarios' collection
    match /usuarios/{userId} {
      allow read: if isAdmin() || (isSignedIn() && request.auth.uid == userId);
      allow create: if isAdmin();
      allow update: if isAdmin() || (isSignedIn() && request.auth.uid == userId && request.resource.data.perfil == resource.data.perfil);
      allow delete: if isAdmin();
    }

    // Rules for 'formadores' collection
    match /formadores/{formadorId} {
        allow read: if isSignedIn();
        allow write: if isAdmin();
    }
    
    // Rules for 'formacoes' collection
    match /formacoes/{formacaoId} {
        // Admins can read/write any formation.
        // A trainer can only read formations they are assigned to.
        allow write: if isAdmin();
        allow read: if isAdmin() || (isSignedIn() && resource.data.formadoresIds.hasAny([request.auth.uid]));
    }
    
    // Rules for 'despesas' collection
    match /despesas/{despesaId} {
      // READ: The owner of the expense or an admin can read it.
      allow read: if isAdmin() || (isSignedIn() && request.auth.uid == resource.data.formadorId);

      // CREATE: The user creating the expense must be the owner.
      allow create: if isSignedIn() && request.resource.data.formadorId == request.auth.uid;
      
      // UPDATE, DELETE: Only the owner of the expense can update or delete it.
      allow update, delete: if isSignedIn() && request.auth.uid == resource.data.formadorId;
    }

    // Rules for 'materiais' collection
    match /materiais/{materialId} {
        allow read: if isSignedIn();
        allow write: if isAdmin();
    }
  }
}
