rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAdmin() {
      // Verifica se o UID do requisitante corresponde a um usuário com perfil de administrador.
      return get(/databases/$(database)/documents/usuarios/$(request.auth.uid)).data.perfil == 'administrador';
    }

    function isSignedIn() {
      return request.auth != null;
    }

    match /usuarios/{userId} {
      // Leitura: Permitida se for o próprio usuário ou se for um admin.
      allow read: if isSignedIn() && (request.auth.uid == userId || isAdmin());
      // Escrita (Criar, Atualizar, Deletar): Permitida apenas para administradores.
      // Isso simplifica as regras e garante que apenas admins gerenciem usuários.
      allow write: if isAdmin();
    }

    match /formadores/{formadorId} {
      // Leitura: Permitida para qualquer usuário autenticado.
      allow read: if isSignedIn();
      // Escrita (Criar, Atualizar, Deletar): Permitida apenas para administradores.
      allow write: if isAdmin();
    }

    match /materiais/{materialId} {
      // Leitura: Permitida para qualquer usuário autenticado.
      allow read: if isSignedIn();
      // Escrita (Criar, Atualizar, Deletar): Permitida apenas para administradores.
      allow write: if isAdmin();
    }
    
    // Regra de segurança para negar qualquer acesso não definido explicitamente.
    // Esta regra não é estritamente necessária com as regras acima, mas é uma boa prática.
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
